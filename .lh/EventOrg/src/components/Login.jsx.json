{
    "sourceFile": "EventOrg/src/components/Login.jsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 4,
            "patches": [
                {
                    "date": 1731927698202,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1731927801049,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,14 +1,14 @@\n import React, { useState } from \"react\";\r\n import axios from \"axios\";\r\n-import { useHistory } from \"react-router-dom\";\r\n+import { useNavigate } from \"react-router-dom\"; // Updated to useNavigate\r\n \r\n const Login = () => {\r\n   const [username, setUsername] = useState(\"\");\r\n   const [password, setPassword] = useState(\"\");\r\n   const [error, setError] = useState(\"\");\r\n   const [loading, setLoading] = useState(false);\r\n-  const history = useHistory();\r\n+  const navigate = useNavigate(); // Replacing useHistory with useNavigate\r\n \r\n   const handleLogin = async (e) => {\r\n     e.preventDefault();\r\n     setLoading(true);\r\n@@ -28,9 +28,9 @@\n         const token = response.data.key;\r\n         localStorage.setItem(\"access_token\", token);\r\n \r\n         // Redirect to the planner page (or any other page)\r\n-        history.push(\"/planner\");\r\n+        navigate(\"/planner\"); // Updated to use navigate for redirection\r\n       }\r\n     } catch (err) {\r\n       setError(\"Invalid credentials. Please try again.\");\r\n       console.error(\"Login error:\", err);\r\n"
                },
                {
                    "date": 1731928993432,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,75 +1,67 @@\n import React, { useState } from \"react\";\r\n-import axios from \"axios\";\r\n-import { useNavigate } from \"react-router-dom\"; // Updated to useNavigate\r\n \r\n-const Login = () => {\r\n+function Login() {\r\n   const [username, setUsername] = useState(\"\");\r\n   const [password, setPassword] = useState(\"\");\r\n   const [error, setError] = useState(\"\");\r\n-  const [loading, setLoading] = useState(false);\r\n-  const navigate = useNavigate(); // Replacing useHistory with useNavigate\r\n+  const [authToken, setAuthToken] = useState(\"\");\r\n \r\n   const handleLogin = async (e) => {\r\n     e.preventDefault();\r\n-    setLoading(true);\r\n-    setError(\"\");\r\n \r\n-    try {\r\n-      const response = await axios.post(\r\n-        \"http://127.0.0.1:8000/dj-rest-auth/login/\",\r\n-        {\r\n-          username,\r\n-          password,\r\n-        }\r\n-      );\r\n+    // Send login request\r\n+    const response = await fetch(\"http://127.0.0.1:8000/dj-rest-auth/login/\", {\r\n+      method: \"POST\",\r\n+      headers: {\r\n+        \"Content-Type\": \"application/json\",\r\n+      },\r\n+      body: JSON.stringify({ username, password }),\r\n+    });\r\n \r\n-      if (response.status === 200) {\r\n-        // Save token in localStorage\r\n-        const token = response.data.key;\r\n-        localStorage.setItem(\"access_token\", token);\r\n-\r\n-        // Redirect to the planner page (or any other page)\r\n-        navigate(\"/planner\"); // Updated to use navigate for redirection\r\n-      }\r\n-    } catch (err) {\r\n-      setError(\"Invalid credentials. Please try again.\");\r\n-      console.error(\"Login error:\", err);\r\n-    } finally {\r\n-      setLoading(false);\r\n+    if (response.ok) {\r\n+      const data = await response.json();\r\n+      // Assuming the response contains a JWT token under 'key'\r\n+      const token = data.key;\r\n+      setAuthToken(token);\r\n+      localStorage.setItem(\"authToken\", token); // Store the token in localStorage for future use\r\n+      setError(\"\"); // Reset error\r\n+      console.log(\"Logged in successfully\", token);\r\n+    } else {\r\n+      const errorData = await response.json();\r\n+      setError(errorData.detail || \"Login failed. Please try again.\");\r\n+      console.log(\"Login failed:\", errorData);\r\n     }\r\n   };\r\n \r\n   return (\r\n     <div>\r\n       <h2>Login</h2>\r\n       <form onSubmit={handleLogin}>\r\n         <div>\r\n-          <label htmlFor=\"username\">Username</label>\r\n+          <label>Username</label>\r\n           <input\r\n             type=\"text\"\r\n-            id=\"username\"\r\n             value={username}\r\n             onChange={(e) => setUsername(e.target.value)}\r\n             required\r\n           />\r\n         </div>\r\n         <div>\r\n-          <label htmlFor=\"password\">Password</label>\r\n+          <label>Password</label>\r\n           <input\r\n             type=\"password\"\r\n-            id=\"password\"\r\n             value={password}\r\n             onChange={(e) => setPassword(e.target.value)}\r\n             required\r\n           />\r\n         </div>\r\n-        {error && <p style={{ color: \"red\" }}>{error}</p>}\r\n-        <button type=\"submit\" disabled={loading}>\r\n-          {loading ? \"Logging in...\" : \"Login\"}\r\n-        </button>\r\n+        <button type=\"submit\">Login</button>\r\n       </form>\r\n+\r\n+      {error && <p style={{ color: \"red\" }}>{error}</p>}\r\n+      {authToken && <p>Authenticated! Token: {authToken}</p>}\r\n     </div>\r\n   );\r\n-};\r\n+}\r\n \r\n export default Login;\r\n"
                },
                {
                    "date": 1731930639710,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,66 +1,34 @@\n import React, { useState } from \"react\";\r\n+import useAuth from \"./useAuth\";\r\n \r\n function Login() {\r\n+  const { login } = useAuth();\r\n   const [username, setUsername] = useState(\"\");\r\n   const [password, setPassword] = useState(\"\");\r\n-  const [error, setError] = useState(\"\");\r\n-  const [authToken, setAuthToken] = useState(\"\");\r\n \r\n-  const handleLogin = async (e) => {\r\n+  const handleSubmit = (e) => {\r\n     e.preventDefault();\r\n-\r\n-    // Send login request\r\n-    const response = await fetch(\"http://127.0.0.1:8000/dj-rest-auth/login/\", {\r\n-      method: \"POST\",\r\n-      headers: {\r\n-        \"Content-Type\": \"application/json\",\r\n-      },\r\n-      body: JSON.stringify({ username, password }),\r\n-    });\r\n-\r\n-    if (response.ok) {\r\n-      const data = await response.json();\r\n-      // Assuming the response contains a JWT token under 'key'\r\n-      const token = data.key;\r\n-      setAuthToken(token);\r\n-      localStorage.setItem(\"authToken\", token); // Store the token in localStorage for future use\r\n-      setError(\"\"); // Reset error\r\n-      console.log(\"Logged in successfully\", token);\r\n-    } else {\r\n-      const errorData = await response.json();\r\n-      setError(errorData.detail || \"Login failed. Please try again.\");\r\n-      console.log(\"Login failed:\", errorData);\r\n-    }\r\n+    login(username, password);\r\n   };\r\n \r\n   return (\r\n     <div>\r\n-      <h2>Login</h2>\r\n-      <form onSubmit={handleLogin}>\r\n-        <div>\r\n-          <label>Username</label>\r\n-          <input\r\n-            type=\"text\"\r\n-            value={username}\r\n-            onChange={(e) => setUsername(e.target.value)}\r\n-            required\r\n-          />\r\n-        </div>\r\n-        <div>\r\n-          <label>Password</label>\r\n-          <input\r\n-            type=\"password\"\r\n-            value={password}\r\n-            onChange={(e) => setPassword(e.target.value)}\r\n-            required\r\n-          />\r\n-        </div>\r\n-        <button type=\"submit\">Login</button>\r\n+      <form onSubmit={handleSubmit}>\r\n+        <input\r\n+          type=\"text\"\r\n+          placeholder=\"Username\"\r\n+          value={username}\r\n+          onChange={(e) => setUsername(e.target.value)}\r\n+        />\r\n+        <input\r\n+          type=\"password\"\r\n+          placeholder=\"Password\"\r\n+          value={password}\r\n+          onChange={(e) => setPassword(e.target.value)}\r\n+        />\r\n+        <button type=\"submit\">Log In</button>\r\n       </form>\r\n-\r\n-      {error && <p style={{ color: \"red\" }}>{error}</p>}\r\n-      {authToken && <p>Authenticated! Token: {authToken}</p>}\r\n     </div>\r\n   );\r\n }\r\n \r\n"
                },
                {
                    "date": 1731944230758,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,35 +1,100 @@\n+// Login.jsx\r\n import React, { useState } from \"react\";\r\n-import useAuth from \"./useAuth\";\r\n+import { useNavigate } from \"react-router-dom\";\r\n \r\n-function Login() {\r\n-  const { login } = useAuth();\r\n+const Login = ({ setAuthToken }) => {\r\n   const [username, setUsername] = useState(\"\");\r\n   const [password, setPassword] = useState(\"\");\r\n+  const [error, setError] = useState(\"\");\r\n+  const navigate = useNavigate();\r\n \r\n-  const handleSubmit = (e) => {\r\n+  const handleLogin = async (e) => {\r\n     e.preventDefault();\r\n-    login(username, password);\r\n+\r\n+    try {\r\n+      const response = await fetch(\"http://127.0.0.1:8000/api/token/\", {\r\n+        method: \"POST\",\r\n+        headers: {\r\n+          \"Content-Type\": \"application/json\",\r\n+        },\r\n+        body: JSON.stringify({ username, password }),\r\n+      });\r\n+\r\n+      const data = await response.json();\r\n+\r\n+      if (response.ok) {\r\n+        // Save the JWT token in localStorage\r\n+        localStorage.setItem(\"authToken\", data.access);\r\n+        setAuthToken(data.access); // Update the parent state\r\n+        navigate(\"/\"); // Redirect to the home page after login\r\n+      } else {\r\n+        setError(data.detail || \"Invalid username or password.\");\r\n+      }\r\n+    } catch (err) {\r\n+      setError(\"Something went wrong. Please try again.\");\r\n+    }\r\n   };\r\n \r\n   return (\r\n-    <div>\r\n-      <form onSubmit={handleSubmit}>\r\n-        <input\r\n-          type=\"text\"\r\n-          placeholder=\"Username\"\r\n-          value={username}\r\n-          onChange={(e) => setUsername(e.target.value)}\r\n-        />\r\n-        <input\r\n-          type=\"password\"\r\n-          placeholder=\"Password\"\r\n-          value={password}\r\n-          onChange={(e) => setPassword(e.target.value)}\r\n-        />\r\n-        <button type=\"submit\">Log In</button>\r\n+    <div style={{ textAlign: \"center\", marginTop: \"50px\" }}>\r\n+      <h2>Login</h2>\r\n+      <form\r\n+        onSubmit={handleLogin}\r\n+        style={{ maxWidth: \"300px\", margin: \"0 auto\" }}\r\n+      >\r\n+        <div style={{ marginBottom: \"10px\" }}>\r\n+          <input\r\n+            type=\"text\"\r\n+            placeholder=\"Username\"\r\n+            value={username}\r\n+            onChange={(e) => setUsername(e.target.value)}\r\n+            required\r\n+            style={{\r\n+              width: \"100%\",\r\n+              padding: \"10px\",\r\n+              marginBottom: \"10px\",\r\n+              borderRadius: \"5px\",\r\n+              border: \"1px solid #ccc\",\r\n+            }}\r\n+          />\r\n+        </div>\r\n+        <div style={{ marginBottom: \"10px\" }}>\r\n+          <input\r\n+            type=\"password\"\r\n+            placeholder=\"Password\"\r\n+            value={password}\r\n+            onChange={(e) => setPassword(e.target.value)}\r\n+            required\r\n+            style={{\r\n+              width: \"100%\",\r\n+              padding: \"10px\",\r\n+              borderRadius: \"5px\",\r\n+              border: \"1px solid #ccc\",\r\n+            }}\r\n+          />\r\n+        </div>\r\n+        <button\r\n+          type=\"submit\"\r\n+          style={{\r\n+            width: \"100%\",\r\n+            padding: \"10px\",\r\n+            backgroundColor: \"blue\",\r\n+            color: \"white\",\r\n+            border: \"none\",\r\n+            borderRadius: \"5px\",\r\n+            cursor: \"pointer\",\r\n+          }}\r\n+        >\r\n+          Login\r\n+        </button>\r\n+        {error && (\r\n+          <div style={{ color: \"red\", marginTop: \"10px\" }}>\r\n+            <strong>{error}</strong>\r\n+          </div>\r\n+        )}\r\n       </form>\r\n     </div>\r\n   );\r\n-}\r\n+};\r\n \r\n export default Login;\r\n"
                }
            ],
            "date": 1731927698202,
            "name": "Commit-0",
            "content": "import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst Login = () => {\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n  const history = useHistory();\r\n\r\n  const handleLogin = async (e) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    setError(\"\");\r\n\r\n    try {\r\n      const response = await axios.post(\r\n        \"http://127.0.0.1:8000/dj-rest-auth/login/\",\r\n        {\r\n          username,\r\n          password,\r\n        }\r\n      );\r\n\r\n      if (response.status === 200) {\r\n        // Save token in localStorage\r\n        const token = response.data.key;\r\n        localStorage.setItem(\"access_token\", token);\r\n\r\n        // Redirect to the planner page (or any other page)\r\n        history.push(\"/planner\");\r\n      }\r\n    } catch (err) {\r\n      setError(\"Invalid credentials. Please try again.\");\r\n      console.error(\"Login error:\", err);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Login</h2>\r\n      <form onSubmit={handleLogin}>\r\n        <div>\r\n          <label htmlFor=\"username\">Username</label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"username\"\r\n            value={username}\r\n            onChange={(e) => setUsername(e.target.value)}\r\n            required\r\n          />\r\n        </div>\r\n        <div>\r\n          <label htmlFor=\"password\">Password</label>\r\n          <input\r\n            type=\"password\"\r\n            id=\"password\"\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n            required\r\n          />\r\n        </div>\r\n        {error && <p style={{ color: \"red\" }}>{error}</p>}\r\n        <button type=\"submit\" disabled={loading}>\r\n          {loading ? \"Logging in...\" : \"Login\"}\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n"
        }
    ]
}