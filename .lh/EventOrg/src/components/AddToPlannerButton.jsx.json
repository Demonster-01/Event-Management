{
    "sourceFile": "EventOrg/src/components/AddToPlannerButton.jsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 20,
            "patches": [
                {
                    "date": 1731926132562,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1731926189491,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,31 +1,73 @@\n-import React from \"react\";\r\n+import React, { useState } from \"react\";\r\n import axios from \"axios\";\r\n+import styles from \"../module_css/AddToPlannerButton.module.css\";\r\n \r\n-const AddToPlannerButton = ({ itemType, itemId, sessionId }) => {\r\n+export default function AddToPlannerButton({\r\n+  venueId = null,\r\n+  serviceId = null,\r\n+  packageId = null,\r\n+  itemType = null,\r\n+}) {\r\n+  const [message, setMessage] = useState(\"\");\r\n+  const [loading, setLoading] = useState(false);\r\n+  const [planners, setPlanners] = useState({\r\n+    venues: [],\r\n+    services: [],\r\n+    packages: [],\r\n+  });\r\n+  const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n+\r\n   const handleAddToPlanner = async () => {\r\n+    setLoading(true);\r\n+    setMessage(\"\");\r\n     try {\r\n-      const response = await axios.post(\"/api/add_to_planner/\", {\r\n-        item_type: itemType,\r\n-        item_id: itemId,\r\n-        session_id: sessionId || null, // Include session_id for anonymous users\r\n-      });\r\n+      // Create a copy of the current planner state\r\n+      const updatedPlanners = { ...planners };\r\n \r\n-      if (response.status === 201) {\r\n-        alert(\"Item successfully added to planner!\");\r\n-      } else {\r\n-        alert(\"Failed to add item to planner. Please try again.\");\r\n+      // Determine which item to add\r\n+      if (itemType === \"venue\") {\r\n+        updatedPlanners.venues.push({ id: venueId });\r\n+      } else if (itemType === \"service\") {\r\n+        updatedPlanners.services.push({ id: serviceId });\r\n+      } else if (itemType === \"package\") {\r\n+        updatedPlanners.packages.push({ id: packageId });\r\n       }\r\n+\r\n+      // Save to localStorage immediately\r\n+      localStorage.setItem(\"plannerList\", JSON.stringify(updatedPlanners));\r\n+\r\n+      // Update state with new planners\r\n+      setPlanners(updatedPlanners);\r\n+\r\n+      // Send the data to the backend if user is authenticated\r\n+      const token = localStorage.getItem(\"access_token\");\r\n+      if (isAuthenticated && token) {\r\n+        const response = await axios.post(\r\n+          \"http://127.0.0.1:8000/api/add_to_planner/\",\r\n+          { item_type: itemType, item_id: venueId || serviceId || packageId },\r\n+          { headers: { Authorization: `Bearer ${token}` } }\r\n+        );\r\n+        setMessage(response.data.message);\r\n+      }\r\n     } catch (error) {\r\n-      console.error(\"Error adding item to planner:\", error);\r\n-      alert(\"An error occurred. Please try again later.\");\r\n+      setMessage(\"Error adding to planner\");\r\n+    } finally {\r\n+      setLoading(false);\r\n     }\r\n   };\r\n \r\n   return (\r\n-    <button onClick={handleAddToPlanner} className=\"add-to-planner-btn\">\r\n-      Add to Planner\r\n-    </button>\r\n+    <div>\r\n+      <div>\r\n+        <button\r\n+          className={styles.btn}\r\n+          onClick={handleAddToPlanner}\r\n+          disabled={loading}\r\n+        >\r\n+          {loading ? \"Adding...\" : <i className=\"bi bi-file-earmark-plus\"></i>}\r\n+        </button>\r\n+      </div>\r\n+      {message && <p>{message}</p>}\r\n+    </div>\r\n   );\r\n-};\r\n-\r\n-export default AddToPlannerButton;\r\n+}\r\n"
                },
                {
                    "date": 1731926348411,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,5 +1,5 @@\n-import React, { useState } from \"react\";\r\n+import React, { useState, useEffect } from \"react\";\r\n import axios from \"axios\";\r\n import styles from \"../module_css/AddToPlannerButton.module.css\";\r\n \r\n export default function AddToPlannerButton({\r\n@@ -16,58 +16,80 @@\n     packages: [],\r\n   });\r\n   const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n \r\n+  // Check if the user is authenticated on component mount\r\n+  useEffect(() => {\r\n+    const token = localStorage.getItem(\"access_token\");\r\n+    if (token) {\r\n+      setIsAuthenticated(true);\r\n+    }\r\n+  }, []);\r\n+\r\n   const handleAddToPlanner = async () => {\r\n+    if (!itemType || (!venueId && !serviceId && !packageId)) {\r\n+      setMessage(\"Invalid item data.\");\r\n+      return;\r\n+    }\r\n+\r\n     setLoading(true);\r\n     setMessage(\"\");\r\n+\r\n     try {\r\n-      // Create a copy of the current planner state\r\n-      const updatedPlanners = { ...planners };\r\n+      // Get current planner state from localStorage or use default\r\n+      const storedPlanners = JSON.parse(\r\n+        localStorage.getItem(\"plannerList\")\r\n+      ) || { venues: [], services: [], packages: [] };\r\n \r\n-      // Determine which item to add\r\n-      if (itemType === \"venue\") {\r\n+      // Determine which item to add based on itemType\r\n+      const updatedPlanners = { ...storedPlanners };\r\n+\r\n+      if (itemType === \"venue\" && venueId) {\r\n         updatedPlanners.venues.push({ id: venueId });\r\n-      } else if (itemType === \"service\") {\r\n+      } else if (itemType === \"service\" && serviceId) {\r\n         updatedPlanners.services.push({ id: serviceId });\r\n-      } else if (itemType === \"package\") {\r\n+      } else if (itemType === \"package\" && packageId) {\r\n         updatedPlanners.packages.push({ id: packageId });\r\n       }\r\n \r\n-      // Save to localStorage immediately\r\n-      localStorage.setItem(\"plannerList\", JSON.stringify(updatedPlanners));\r\n+      // Save updated planners to localStorage\r\n+      // localStorage.setItem(\"plannerList\", JSON.stringify(updatedPlanners));\r\n \r\n-      // Update state with new planners\r\n+      // Update state with the new planner list\r\n       setPlanners(updatedPlanners);\r\n \r\n-      // Send the data to the backend if user is authenticated\r\n-      const token = localStorage.getItem(\"access_token\");\r\n-      if (isAuthenticated && token) {\r\n+      // If the user is authenticated, send the request to the backend\r\n+      if (isAuthenticated) {\r\n+        const token = localStorage.getItem(\"access_token\");\r\n+        const itemId = venueId || serviceId || packageId;\r\n         const response = await axios.post(\r\n           \"http://127.0.0.1:8000/api/add_to_planner/\",\r\n-          { item_type: itemType, item_id: venueId || serviceId || packageId },\r\n+          { item_type: itemType, item_id: itemId },\r\n           { headers: { Authorization: `Bearer ${token}` } }\r\n         );\r\n-        setMessage(response.data.message);\r\n+        setMessage(\r\n+          response.data.message || \"Item successfully added to planner.\"\r\n+        );\r\n+      } else {\r\n+        setMessage(\"Item added to planner (not authenticated).\");\r\n       }\r\n     } catch (error) {\r\n-      setMessage(\"Error adding to planner\");\r\n+      setMessage(\"Error adding to planner.\");\r\n+      console.error(\"Error:\", error);\r\n     } finally {\r\n       setLoading(false);\r\n     }\r\n   };\r\n \r\n   return (\r\n     <div>\r\n-      <div>\r\n-        <button\r\n-          className={styles.btn}\r\n-          onClick={handleAddToPlanner}\r\n-          disabled={loading}\r\n-        >\r\n-          {loading ? \"Adding...\" : <i className=\"bi bi-file-earmark-plus\"></i>}\r\n-        </button>\r\n-      </div>\r\n+      <button\r\n+        className={styles.btn}\r\n+        onClick={handleAddToPlanner}\r\n+        disabled={loading}\r\n+      >\r\n+        {loading ? \"Adding...\" : <i className=\"bi bi-file-earmark-plus\"></i>}\r\n+      </button>\r\n       {message && <p>{message}</p>}\r\n     </div>\r\n   );\r\n }\r\n"
                },
                {
                    "date": 1731926358377,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -40,9 +40,9 @@\n         localStorage.getItem(\"plannerList\")\r\n       ) || { venues: [], services: [], packages: [] };\r\n \r\n       // Determine which item to add based on itemType\r\n-      const updatedPlanners = { ...storedPlanners };\r\n+      // const updatedPlanners = { ...storedPlanners };\r\n \r\n       if (itemType === \"venue\" && venueId) {\r\n         updatedPlanners.venues.push({ id: venueId });\r\n       } else if (itemType === \"service\" && serviceId) {\r\n"
                },
                {
                    "date": 1731926377164,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -40,9 +40,9 @@\n         localStorage.getItem(\"plannerList\")\r\n       ) || { venues: [], services: [], packages: [] };\r\n \r\n       // Determine which item to add based on itemType\r\n-      // const updatedPlanners = { ...storedPlanners };\r\n+      const updatedPlanners = { ...storedPlanners };\r\n \r\n       if (itemType === \"venue\" && venueId) {\r\n         updatedPlanners.venues.push({ id: venueId });\r\n       } else if (itemType === \"service\" && serviceId) {\r\n@@ -54,9 +54,9 @@\n       // Save updated planners to localStorage\r\n       // localStorage.setItem(\"plannerList\", JSON.stringify(updatedPlanners));\r\n \r\n       // Update state with the new planner list\r\n-      setPlanners(updatedPlanners);\r\n+      // setPlanners(updatedPlanners);\r\n \r\n       // If the user is authenticated, send the request to the backend\r\n       if (isAuthenticated) {\r\n         const token = localStorage.getItem(\"access_token\");\r\n"
                },
                {
                    "date": 1731926691241,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -14,82 +14,73 @@\n     venues: [],\r\n     services: [],\r\n     packages: [],\r\n   });\r\n+\r\n   const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n \r\n-  // Check if the user is authenticated on component mount\r\n+  // Check if the user is authenticated\r\n   useEffect(() => {\r\n-    const token = localStorage.getItem(\"access_token\");\r\n+    const token = localStorage.getItem(\"authToken\");\r\n     if (token) {\r\n       setIsAuthenticated(true);\r\n     }\r\n   }, []);\r\n \r\n   const handleAddToPlanner = async () => {\r\n-    if (!itemType || (!venueId && !serviceId && !packageId)) {\r\n-      setMessage(\"Invalid item data.\");\r\n-      return;\r\n-    }\r\n-\r\n     setLoading(true);\r\n     setMessage(\"\");\r\n-\r\n     try {\r\n-      // Get current planner state from localStorage or use default\r\n-      const storedPlanners = JSON.parse(\r\n-        localStorage.getItem(\"plannerList\")\r\n-      ) || { venues: [], services: [], packages: [] };\r\n+      // Create a copy of the current planner state\r\n+      const updatedPlanners = { ...planners };\r\n \r\n-      // Determine which item to add based on itemType\r\n-      const updatedPlanners = { ...storedPlanners };\r\n-\r\n-      if (itemType === \"venue\" && venueId) {\r\n+      // Determine which item to add\r\n+      if (itemType === \"venue\") {\r\n         updatedPlanners.venues.push({ id: venueId });\r\n-      } else if (itemType === \"service\" && serviceId) {\r\n+      } else if (itemType === \"service\") {\r\n         updatedPlanners.services.push({ id: serviceId });\r\n-      } else if (itemType === \"package\" && packageId) {\r\n+      } else if (itemType === \"package\") {\r\n         updatedPlanners.packages.push({ id: packageId });\r\n       }\r\n \r\n-      // Save updated planners to localStorage\r\n-      // localStorage.setItem(\"plannerList\", JSON.stringify(updatedPlanners));\r\n+      // Save to localStorage immediately\r\n+      localStorage.setItem(\"plannerList\", JSON.stringify(updatedPlanners));\r\n \r\n-      // Update state with the new planner list\r\n-      // setPlanners(updatedPlanners);\r\n+      // Update state with new planners\r\n+      setPlanners(updatedPlanners);\r\n \r\n-      // If the user is authenticated, send the request to the backend\r\n-      if (isAuthenticated) {\r\n-        const token = localStorage.getItem(\"access_token\");\r\n-        const itemId = venueId || serviceId || packageId;\r\n+      // Send the data to the backend if the user is authenticated\r\n+      const token = localStorage.getItem(\"authToken\");\r\n+      if (isAuthenticated && token) {\r\n         const response = await axios.post(\r\n           \"http://127.0.0.1:8000/api/add_to_planner/\",\r\n-          { item_type: itemType, item_id: itemId },\r\n-          { headers: { Authorization: `Bearer ${token}` } }\r\n+          { item_type: itemType, item_id: venueId || serviceId || packageId },\r\n+          {\r\n+            headers: {\r\n+              Authorization: `Bearer ${token}`,\r\n+            },\r\n+          }\r\n         );\r\n-        setMessage(\r\n-          response.data.message || \"Item successfully added to planner.\"\r\n-        );\r\n-      } else {\r\n-        setMessage(\"Item added to planner (not authenticated).\");\r\n+        setMessage(response.data.message);\r\n       }\r\n     } catch (error) {\r\n-      setMessage(\"Error adding to planner.\");\r\n-      console.error(\"Error:\", error);\r\n+      setMessage(\"Error adding to planner\");\r\n     } finally {\r\n       setLoading(false);\r\n     }\r\n   };\r\n \r\n   return (\r\n     <div>\r\n-      <button\r\n-        className={styles.btn}\r\n-        onClick={handleAddToPlanner}\r\n-        disabled={loading}\r\n-      >\r\n-        {loading ? \"Adding...\" : <i className=\"bi bi-file-earmark-plus\"></i>}\r\n-      </button>\r\n+      <div>\r\n+        <button\r\n+          className={styles.btn}\r\n+          onClick={handleAddToPlanner}\r\n+          disabled={loading}\r\n+        >\r\n+          {loading ? \"Adding...\" : <i className=\"bi bi-file-earmark-plus\"></i>}\r\n+        </button>\r\n+      </div>\r\n       {message && <p>{message}</p>}\r\n     </div>\r\n   );\r\n }\r\n"
                },
                {
                    "date": 1731926857045,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -60,11 +60,16 @@\n             },\r\n           }\r\n         );\r\n         setMessage(response.data.message);\r\n+      } else {\r\n+        setMessage(\"Authentication required.\");\r\n       }\r\n     } catch (error) {\r\n-      setMessage(\"Error adding to planner\");\r\n+      setMessage(\r\n+        \"Error adding to planner: \" + error.response?.data?.message ||\r\n+          error.message\r\n+      );\r\n     } finally {\r\n       setLoading(false);\r\n     }\r\n   };\r\n"
                },
                {
                    "date": 1731927082440,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,5 +1,5 @@\n-import React, { useState, useEffect } from \"react\";\r\n+import React, { useState } from \"react\";\r\n import axios from \"axios\";\r\n import styles from \"../module_css/AddToPlannerButton.module.css\";\r\n \r\n export default function AddToPlannerButton({\r\n@@ -7,69 +7,26 @@\n   serviceId = null,\r\n   packageId = null,\r\n   itemType = null,\r\n }) {\r\n+  console.log(itemType, packageId);\r\n   const [message, setMessage] = useState(\"\");\r\n   const [loading, setLoading] = useState(false);\r\n-  const [planners, setPlanners] = useState({\r\n-    venues: [],\r\n-    services: [],\r\n-    packages: [],\r\n-  });\r\n-\r\n-  const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n-\r\n-  // Check if the user is authenticated\r\n-  useEffect(() => {\r\n-    const token = localStorage.getItem(\"authToken\");\r\n-    if (token) {\r\n-      setIsAuthenticated(true);\r\n-    }\r\n-  }, []);\r\n-\r\n   const handleAddToPlanner = async () => {\r\n     setLoading(true);\r\n     setMessage(\"\");\r\n     try {\r\n-      // Create a copy of the current planner state\r\n-      const updatedPlanners = { ...planners };\r\n-\r\n-      // Determine which item to add\r\n-      if (itemType === \"venue\") {\r\n-        updatedPlanners.venues.push({ id: venueId });\r\n-      } else if (itemType === \"service\") {\r\n-        updatedPlanners.services.push({ id: serviceId });\r\n-      } else if (itemType === \"package\") {\r\n-        updatedPlanners.packages.push({ id: packageId });\r\n-      }\r\n-\r\n-      // Save to localStorage immediately\r\n-      localStorage.setItem(\"plannerList\", JSON.stringify(updatedPlanners));\r\n-\r\n-      // Update state with new planners\r\n-      setPlanners(updatedPlanners);\r\n-\r\n-      // Send the data to the backend if the user is authenticated\r\n-      const token = localStorage.getItem(\"authToken\");\r\n-      if (isAuthenticated && token) {\r\n-        const response = await axios.post(\r\n-          \"http://127.0.0.1:8000/api/add_to_planner/\",\r\n-          { item_type: itemType, item_id: venueId || serviceId || packageId },\r\n-          {\r\n-            headers: {\r\n-              Authorization: `Bearer ${token}`,\r\n-            },\r\n-          }\r\n-        );\r\n-        setMessage(response.data.message);\r\n-      } else {\r\n-        setMessage(\"Authentication required.\");\r\n-      }\r\n+      console.log(\"btn was clicked ready to post\", itemType, packageId);\r\n+      const response = await axios.post(\r\n+        \"http://127.0.0.1:8000/api/add_to_planner/\",\r\n+        {\r\n+          item_type: itemType, // 'package', 'venue', or 'service'\r\n+          item_id: packageId || venueId || serviceId, // Pass the appropriate ID\r\n+        }\r\n+      );\r\n+      setMessage(response.data.message);\r\n     } catch (error) {\r\n-      setMessage(\r\n-        \"Error adding to planner: \" + error.response?.data?.message ||\r\n-          error.message\r\n-      );\r\n+      setMessage(\"Error adding to planner\");\r\n     } finally {\r\n       setLoading(false);\r\n     }\r\n   };\r\n"
                },
                {
                    "date": 1731927592499,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,48 +1,60 @@\n import React, { useState } from \"react\";\r\n import axios from \"axios\";\r\n-import styles from \"../module_css/AddToPlannerButton.module.css\";\r\n \r\n-export default function AddToPlannerButton({\r\n-  venueId = null,\r\n-  serviceId = null,\r\n-  packageId = null,\r\n-  itemType = null,\r\n-}) {\r\n-  console.log(itemType, packageId);\r\n-  const [message, setMessage] = useState(\"\");\r\n+const AddToPlannerButton = ({ itemType, itemId, itemTitle }) => {\r\n   const [loading, setLoading] = useState(false);\r\n+  const [error, setError] = useState(null);\r\n+\r\n+  const token = localStorage.getItem(\"access_token\"); // Retrieve the token from localStorage\r\n+\r\n+  // Check if the token exists before proceeding\r\n+  if (!token) {\r\n+    return <p>Please login to add items to your planner.</p>;\r\n+  }\r\n+\r\n   const handleAddToPlanner = async () => {\r\n     setLoading(true);\r\n-    setMessage(\"\");\r\n+    setError(null); // Clear any previous errors\r\n+\r\n     try {\r\n-      console.log(\"btn was clicked ready to post\", itemType, packageId);\r\n       const response = await axios.post(\r\n-        \"http://127.0.0.1:8000/api/add_to_planner/\",\r\n+        \"http://127.0.0.1:8000/api/add_to_planner/\", // Replace with your API endpoint\r\n         {\r\n-          item_type: itemType, // 'package', 'venue', or 'service'\r\n-          item_id: packageId || venueId || serviceId, // Pass the appropriate ID\r\n+          item_type: itemType,\r\n+          item_id: itemId,\r\n+        },\r\n+        {\r\n+          headers: {\r\n+            Authorization: `Bearer ${token}`, // Send token as Bearer in Authorization header\r\n+          },\r\n         }\r\n       );\r\n-      setMessage(response.data.message);\r\n-    } catch (error) {\r\n-      setMessage(\"Error adding to planner\");\r\n+\r\n+      if (response.status === 200) {\r\n+        // Item added successfully\r\n+        console.log(\"Item added to planner:\", response.data);\r\n+        alert(`Item \"${itemTitle}\" added to your planner.`);\r\n+      } else {\r\n+        // Handle any other statuses if needed\r\n+        alert(\"Failed to add item to planner.\");\r\n+      }\r\n+    } catch (err) {\r\n+      // Catch any errors from the request (e.g., token issues, network)\r\n+      setError(\"Failed to add item to planner. Please try again.\");\r\n+      console.error(\"Error adding item to planner:\", err);\r\n     } finally {\r\n       setLoading(false);\r\n     }\r\n   };\r\n \r\n   return (\r\n     <div>\r\n-      <div>\r\n-        <button\r\n-          className={styles.btn}\r\n-          onClick={handleAddToPlanner}\r\n-          disabled={loading}\r\n-        >\r\n-          {loading ? \"Adding...\" : <i className=\"bi bi-file-earmark-plus\"></i>}\r\n-        </button>\r\n-      </div>\r\n-      {message && <p>{message}</p>}\r\n+      <button onClick={handleAddToPlanner} disabled={loading}>\r\n+        {loading ? \"Adding...\" : `Add \"${itemTitle}\" to Planner`}\r\n+      </button>\r\n+      {error && <p style={{ color: \"red\" }}>{error}</p>}\r\n     </div>\r\n   );\r\n-}\r\n+};\r\n+\r\n+export default AddToPlannerButton;\r\n"
                },
                {
                    "date": 1731927893262,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,60 +1,45 @@\n-import React, { useState } from \"react\";\r\n-import axios from \"axios\";\r\n-\r\n-const AddToPlannerButton = ({ itemType, itemId, itemTitle }) => {\r\n+const AddToPlannerButton = ({ item }) => {\r\n   const [loading, setLoading] = useState(false);\r\n-  const [error, setError] = useState(null);\r\n+  const [error, setError] = useState(\"\");\r\n+  const [success, setSuccess] = useState(false);\r\n \r\n-  const token = localStorage.getItem(\"access_token\"); // Retrieve the token from localStorage\r\n-\r\n-  // Check if the token exists before proceeding\r\n-  if (!token) {\r\n-    return <p>Please login to add items to your planner.</p>;\r\n-  }\r\n-\r\n   const handleAddToPlanner = async () => {\r\n     setLoading(true);\r\n-    setError(null); // Clear any previous errors\r\n+    setError(\"\");\r\n+    setSuccess(false);\r\n \r\n     try {\r\n+      const token = localStorage.getItem(\"access_token\"); // Get the token\r\n       const response = await axios.post(\r\n-        \"http://127.0.0.1:8000/api/add_to_planner/\", // Replace with your API endpoint\r\n+        \"http://127.0.0.1:8000/api/add_to_planner/\",\r\n+        { itemId: item.id }, // Make sure to pass the correct item data\r\n         {\r\n-          item_type: itemType,\r\n-          item_id: itemId,\r\n-        },\r\n-        {\r\n           headers: {\r\n-            Authorization: `Bearer ${token}`, // Send token as Bearer in Authorization header\r\n+            Authorization: `Bearer ${token}`, // Include the token in the request header\r\n           },\r\n         }\r\n       );\r\n \r\n       if (response.status === 200) {\r\n-        // Item added successfully\r\n-        console.log(\"Item added to planner:\", response.data);\r\n-        alert(`Item \"${itemTitle}\" added to your planner.`);\r\n+        setSuccess(true);\r\n       } else {\r\n-        // Handle any other statuses if needed\r\n-        alert(\"Failed to add item to planner.\");\r\n+        setError(\"Failed to add item to planner.\");\r\n       }\r\n     } catch (err) {\r\n-      // Catch any errors from the request (e.g., token issues, network)\r\n       setError(\"Failed to add item to planner. Please try again.\");\r\n-      console.error(\"Error adding item to planner:\", err);\r\n     } finally {\r\n       setLoading(false);\r\n     }\r\n   };\r\n \r\n   return (\r\n     <div>\r\n       <button onClick={handleAddToPlanner} disabled={loading}>\r\n-        {loading ? \"Adding...\" : `Add \"${itemTitle}\" to Planner`}\r\n+        {loading ? \"Adding...\" : `Add ${item?.title || \"Item\"} to Planner`}{\" \"}\r\n+        {/* Ensure title is correctly accessed */}\r\n       </button>\r\n+      {success && <p>Item successfully added to planner!</p>}\r\n       {error && <p style={{ color: \"red\" }}>{error}</p>}\r\n     </div>\r\n   );\r\n };\r\n-\r\n-export default AddToPlannerButton;\r\n"
                },
                {
                    "date": 1731927939163,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -42,4 +42,6 @@\n       {error && <p style={{ color: \"red\" }}>{error}</p>}\r\n     </div>\r\n   );\r\n };\r\n+\r\n+export default AddToPlannerButton;\r\n"
                },
                {
                    "date": 1731927965661,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,4 +1,5 @@\n+import React, { useState } from \"react\";\r\n const AddToPlannerButton = ({ item }) => {\r\n   const [loading, setLoading] = useState(false);\r\n   const [error, setError] = useState(\"\");\r\n   const [success, setSuccess] = useState(false);\r\n"
                },
                {
                    "date": 1731928452106,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,5 +1,7 @@\n import React, { useState } from \"react\";\r\n+import axios from \"axios\"; // Ensure axios is installed\r\n+\r\n const AddToPlannerButton = ({ item }) => {\r\n   const [loading, setLoading] = useState(false);\r\n   const [error, setError] = useState(\"\");\r\n   const [success, setSuccess] = useState(false);\r\n@@ -9,28 +11,32 @@\n     setError(\"\");\r\n     setSuccess(false);\r\n \r\n     try {\r\n-      const token = localStorage.getItem(\"access_token\"); // Get the token\r\n+      const token = localStorage.getItem(\"access_token\"); // Get the token from local storage\r\n       const response = await axios.post(\r\n-        \"http://127.0.0.1:8000/api/add_to_planner/\",\r\n-        { itemId: item.id }, // Make sure to pass the correct item data\r\n+        \"http://127.0.0.1:8000/api/add_to_planner/\", // Endpoint for adding to planner\r\n         {\r\n+          venue: item.venue.id, // Pass the ID or relevant data for the item\r\n+          service: item.service.id, // Pass the ID of the service (if applicable)\r\n+          package: item.package.id, // Pass the ID of the package (if applicable)\r\n+        },\r\n+        {\r\n           headers: {\r\n-            Authorization: `Bearer ${token}`, // Include the token in the request header\r\n+            Authorization: `Token ${token}`, // Use the token for authentication\r\n           },\r\n         }\r\n       );\r\n \r\n       if (response.status === 200) {\r\n-        setSuccess(true);\r\n+        setSuccess(true); // If the request was successful\r\n       } else {\r\n         setError(\"Failed to add item to planner.\");\r\n       }\r\n     } catch (err) {\r\n       setError(\"Failed to add item to planner. Please try again.\");\r\n     } finally {\r\n-      setLoading(false);\r\n+      setLoading(false); // Reset loading state\r\n     }\r\n   };\r\n \r\n   return (\r\n"
                },
                {
                    "date": 1731928625521,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,52 +1,50 @@\n import React, { useState } from \"react\";\r\n-import axios from \"axios\"; // Ensure axios is installed\r\n \r\n-const AddToPlannerButton = ({ item }) => {\r\n-  const [loading, setLoading] = useState(false);\r\n-  const [error, setError] = useState(\"\");\r\n+const AddToPlannerButton = ({ venueId, serviceId, packageId, authToken }) => {\r\n+  const [error, setError] = useState(null);\r\n   const [success, setSuccess] = useState(false);\r\n \r\n   const handleAddToPlanner = async () => {\r\n-    setLoading(true);\r\n-    setError(\"\");\r\n-    setSuccess(false);\r\n+    // Prepare data to send in the POST request\r\n+    const data = {\r\n+      venue: venueId,\r\n+      service: serviceId,\r\n+      package: packageId,\r\n+    };\r\n \r\n+    // Send POST request to backend\r\n     try {\r\n-      const token = localStorage.getItem(\"access_token\"); // Get the token from local storage\r\n-      const response = await axios.post(\r\n-        \"http://127.0.0.1:8000/api/add_to_planner/\", // Endpoint for adding to planner\r\n+      const response = await fetch(\r\n+        \"http://127.0.0.1:8000/api/add_to_planner/\",\r\n         {\r\n-          venue: item.venue.id, // Pass the ID or relevant data for the item\r\n-          service: item.service.id, // Pass the ID of the service (if applicable)\r\n-          package: item.package.id, // Pass the ID of the package (if applicable)\r\n-        },\r\n-        {\r\n+          method: \"POST\",\r\n           headers: {\r\n-            Authorization: `Token ${token}`, // Use the token for authentication\r\n+            \"Content-Type\": \"application/json\",\r\n+            Authorization: `Token ${authToken}`, // Include the token in headers\r\n           },\r\n+          body: JSON.stringify(data),\r\n         }\r\n       );\r\n \r\n-      if (response.status === 200) {\r\n-        setSuccess(true); // If the request was successful\r\n+      if (response.ok) {\r\n+        setSuccess(true); // If successful, set success state\r\n+        setError(null); // Clear any previous error\r\n       } else {\r\n-        setError(\"Failed to add item to planner.\");\r\n+        const errorData = await response.json();\r\n+        setSuccess(false);\r\n+        setError(errorData.detail || \"Failed to add item to planner.\"); // Set error message\r\n       }\r\n-    } catch (err) {\r\n-      setError(\"Failed to add item to planner. Please try again.\");\r\n-    } finally {\r\n-      setLoading(false); // Reset loading state\r\n+    } catch (error) {\r\n+      setSuccess(false);\r\n+      setError(\"An unexpected error occurred. Please try again.\");\r\n     }\r\n   };\r\n \r\n   return (\r\n     <div>\r\n-      <button onClick={handleAddToPlanner} disabled={loading}>\r\n-        {loading ? \"Adding...\" : `Add ${item?.title || \"Item\"} to Planner`}{\" \"}\r\n-        {/* Ensure title is correctly accessed */}\r\n-      </button>\r\n-      {success && <p>Item successfully added to planner!</p>}\r\n+      <button onClick={handleAddToPlanner}>Add to Planner</button>\r\n+      {success && <p>Item successfully added to your planner!</p>}\r\n       {error && <p style={{ color: \"red\" }}>{error}</p>}\r\n     </div>\r\n   );\r\n };\r\n"
                },
                {
                    "date": 1731928717809,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -19,9 +19,9 @@\n         {\r\n           method: \"POST\",\r\n           headers: {\r\n             \"Content-Type\": \"application/json\",\r\n-            Authorization: `Token ${authToken}`, // Include the token in headers\r\n+            Authorization: `Bearer ${authToken}`, // Include the token in headers\r\n           },\r\n           body: JSON.stringify(data),\r\n         }\r\n       );\r\n"
                },
                {
                    "date": 1731929158326,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,52 +1,59 @@\n import React, { useState } from \"react\";\r\n \r\n-const AddToPlannerButton = ({ venueId, serviceId, packageId, authToken }) => {\r\n-  const [error, setError] = useState(null);\r\n+function AddToPlannerButton({ packageId, venueId, serviceId }) {\r\n+  const [error, setError] = useState(\"\");\r\n   const [success, setSuccess] = useState(false);\r\n \r\n   const handleAddToPlanner = async () => {\r\n-    // Prepare data to send in the POST request\r\n+    const authToken = localStorage.getItem(\"authToken\");\r\n+\r\n+    if (!authToken) {\r\n+      setError(\"Please login to add items to your planner.\");\r\n+      return;\r\n+    }\r\n+\r\n+    // Data to be sent with the POST request\r\n     const data = {\r\n+      package: packageId,\r\n       venue: venueId,\r\n       service: serviceId,\r\n-      package: packageId,\r\n     };\r\n \r\n-    // Send POST request to backend\r\n-    try {\r\n-      const response = await fetch(\r\n-        \"http://127.0.0.1:8000/api/add_to_planner/\",\r\n-        {\r\n-          method: \"POST\",\r\n-          headers: {\r\n-            \"Content-Type\": \"application/json\",\r\n-            Authorization: `Bearer ${authToken}`, // Include the token in headers\r\n-          },\r\n-          body: JSON.stringify(data),\r\n-        }\r\n+    // Send the request to add the item to planner\r\n+    const response = await fetch(\"http://127.0.0.1:8000/api/add_to_planner/\", {\r\n+      method: \"POST\",\r\n+      headers: {\r\n+        \"Content-Type\": \"application/json\",\r\n+        Authorization: `Bearer ${authToken}`, // Add the token here\r\n+      },\r\n+      body: JSON.stringify(data),\r\n+    });\r\n+\r\n+    if (response.ok) {\r\n+      setSuccess(true);\r\n+      setError(\"\"); // Clear any previous error\r\n+      console.log(\"Item added to planner successfully!\");\r\n+    } else {\r\n+      const errorData = await response.json();\r\n+      setError(\r\n+        errorData.detail || \"Failed to add item to planner. Please try again.\"\r\n       );\r\n-\r\n-      if (response.ok) {\r\n-        setSuccess(true); // If successful, set success state\r\n-        setError(null); // Clear any previous error\r\n-      } else {\r\n-        const errorData = await response.json();\r\n-        setSuccess(false);\r\n-        setError(errorData.detail || \"Failed to add item to planner.\"); // Set error message\r\n-      }\r\n-    } catch (error) {\r\n       setSuccess(false);\r\n-      setError(\"An unexpected error occurred. Please try again.\");\r\n+      console.log(\"Failed to add item:\", errorData);\r\n     }\r\n   };\r\n \r\n   return (\r\n     <div>\r\n       <button onClick={handleAddToPlanner}>Add to Planner</button>\r\n-      {success && <p>Item successfully added to your planner!</p>}\r\n       {error && <p style={{ color: \"red\" }}>{error}</p>}\r\n+      {success && (\r\n+        <p style={{ color: \"green\" }}>\r\n+          Item added successfully to your planner!\r\n+        </p>\r\n+      )}\r\n     </div>\r\n   );\r\n-};\r\n+}\r\n \r\n export default AddToPlannerButton;\r\n"
                },
                {
                    "date": 1731930025749,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,43 +4,31 @@\n   const [error, setError] = useState(\"\");\r\n   const [success, setSuccess] = useState(false);\r\n \r\n   const handleAddToPlanner = async () => {\r\n-    const authToken = localStorage.getItem(\"authToken\");\r\n+    try {\r\n+      const response = await fetch(\r\n+        \"http://127.0.0.1:8000/api/add_to_planner/\",\r\n+        {\r\n+          method: \"POST\",\r\n+          headers: {\r\n+            \"Content-Type\": \"application/json\",\r\n+            // No need for Authorization header since the view is open to all\r\n+          },\r\n+          body: JSON.stringify(data),\r\n+        }\r\n+      );\r\n \r\n-    if (!authToken) {\r\n-      setError(\"Please login to add items to your planner.\");\r\n-      return;\r\n-    }\r\n+      const responseData = await response.json();\r\n \r\n-    // Data to be sent with the POST request\r\n-    const data = {\r\n-      package: packageId,\r\n-      venue: venueId,\r\n-      service: serviceId,\r\n-    };\r\n-\r\n-    // Send the request to add the item to planner\r\n-    const response = await fetch(\"http://127.0.0.1:8000/api/add_to_planner/\", {\r\n-      method: \"POST\",\r\n-      headers: {\r\n-        \"Content-Type\": \"application/json\",\r\n-        Authorization: `Bearer ${authToken}`, // Add the token here\r\n-      },\r\n-      body: JSON.stringify(data),\r\n-    });\r\n-\r\n-    if (response.ok) {\r\n-      setSuccess(true);\r\n-      setError(\"\"); // Clear any previous error\r\n-      console.log(\"Item added to planner successfully!\");\r\n-    } else {\r\n-      const errorData = await response.json();\r\n-      setError(\r\n-        errorData.detail || \"Failed to add item to planner. Please try again.\"\r\n-      );\r\n-      setSuccess(false);\r\n-      console.log(\"Failed to add item:\", errorData);\r\n+      if (response.ok) {\r\n+        alert(\"Item successfully added to planner.\");\r\n+      } else {\r\n+        alert(`Failed to add item to planner: ${responseData.error}`);\r\n+      }\r\n+    } catch (error) {\r\n+      console.error(\"Error:\", error);\r\n+      alert(\"Failed to add item to planner. Please try again.\");\r\n     }\r\n   };\r\n \r\n   return (\r\n"
                },
                {
                    "date": 1731930946819,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -11,15 +11,15 @@\n         {\r\n           method: \"POST\",\r\n           headers: {\r\n             \"Content-Type\": \"application/json\",\r\n-            // No need for Authorization header since the view is open to all\r\n           },\r\n           body: JSON.stringify(data),\r\n         }\r\n       );\r\n \r\n       const responseData = await response.json();\r\n+      console.log(\"API Response:\", responseData); // Add this for debugging\r\n \r\n       if (response.ok) {\r\n         alert(\"Item successfully added to planner.\");\r\n       } else {\r\n"
                },
                {
                    "date": 1731936264053,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,8 +4,15 @@\n   const [error, setError] = useState(\"\");\r\n   const [success, setSuccess] = useState(false);\r\n \r\n   const handleAddToPlanner = async () => {\r\n+    const data = {\r\n+      package: packageId,\r\n+      venue: venueId,\r\n+      service: serviceId,\r\n+      booked_at: new Date().toISOString(), // or any other value for booked_at\r\n+    };\r\n+\r\n     try {\r\n       const response = await fetch(\r\n         \"http://127.0.0.1:8000/api/add_to_planner/\",\r\n         {\r\n@@ -17,9 +24,9 @@\n         }\r\n       );\r\n \r\n       const responseData = await response.json();\r\n-      console.log(\"API Response:\", responseData); // Add this for debugging\r\n+      console.log(\"API Response:\", responseData);\r\n \r\n       if (response.ok) {\r\n         alert(\"Item successfully added to planner.\");\r\n       } else {\r\n"
                },
                {
                    "date": 1731936393418,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,14 +4,20 @@\n   const [error, setError] = useState(\"\");\r\n   const [success, setSuccess] = useState(false);\r\n \r\n   const handleAddToPlanner = async () => {\r\n-    const data = {\r\n-      package: packageId,\r\n-      venue: venueId,\r\n-      service: serviceId,\r\n-      booked_at: new Date().toISOString(), // or any other value for booked_at\r\n-    };\r\n+    // Prepare the data object conditionally\r\n+    const data = {};\r\n+    if (packageId) {\r\n+      data.package = packageId;\r\n+    }\r\n+    if (venueId) {\r\n+      data.venue = venueId;\r\n+    }\r\n+    if (serviceId) {\r\n+      data.service = serviceId;\r\n+    }\r\n+    data.booked_at = new Date().toISOString();\r\n \r\n     try {\r\n       const response = await fetch(\r\n         \"http://127.0.0.1:8000/api/add_to_planner/\",\r\n"
                },
                {
                    "date": 1731936745340,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,9 +4,8 @@\n   const [error, setError] = useState(\"\");\r\n   const [success, setSuccess] = useState(false);\r\n \r\n   const handleAddToPlanner = async () => {\r\n-    // Prepare the data object conditionally\r\n     const data = {};\r\n     if (packageId) {\r\n       data.package = packageId;\r\n     }\r\n@@ -17,8 +16,19 @@\n       data.service = serviceId;\r\n     }\r\n     data.booked_at = new Date().toISOString();\r\n \r\n+    // Add session ID for anonymous users if not authenticated\r\n+    const sessionId = localStorage.getItem(\"session_id\"); // Assuming session_id is stored in localStorage\r\n+    if (!sessionId) {\r\n+      // Generate a session ID for the first time\r\n+      const newSessionId = `session_${Math.random().toString(36).substr(2, 9)}`;\r\n+      localStorage.setItem(\"session_id\", newSessionId);\r\n+      data.session_id = newSessionId;\r\n+    } else {\r\n+      data.session_id = sessionId;\r\n+    }\r\n+\r\n     try {\r\n       const response = await fetch(\r\n         \"http://127.0.0.1:8000/api/add_to_planner/\",\r\n         {\r\n"
                }
            ],
            "date": 1731926132562,
            "name": "Commit-0",
            "content": "import React from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst AddToPlannerButton = ({ itemType, itemId, sessionId }) => {\r\n  const handleAddToPlanner = async () => {\r\n    try {\r\n      const response = await axios.post(\"/api/add_to_planner/\", {\r\n        item_type: itemType,\r\n        item_id: itemId,\r\n        session_id: sessionId || null, // Include session_id for anonymous users\r\n      });\r\n\r\n      if (response.status === 201) {\r\n        alert(\"Item successfully added to planner!\");\r\n      } else {\r\n        alert(\"Failed to add item to planner. Please try again.\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error adding item to planner:\", error);\r\n      alert(\"An error occurred. Please try again later.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <button onClick={handleAddToPlanner} className=\"add-to-planner-btn\">\r\n      Add to Planner\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default AddToPlannerButton;\r\n"
        }
    ]
}