{
    "sourceFile": "EventAPI/api/serializer.py",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 1,
            "patches": [
                {
                    "date": 1731427078821,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1731928133580,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,7 @@\n # serializers.py\r\n from rest_framework import serializers\r\n-from .models import Venue,Service,OurWork,Package\r\n+from .models import Venue,Service,OurWork,Package,PlannerList\r\n \r\n class VenueSerializer(serializers.ModelSerializer):\r\n     class Meta:\r\n         model = Venue\r\n@@ -23,7 +23,25 @@\n         model = OurWork\r\n         fields = ['id', 'Name', 'poster', 'created_at']\r\n         \r\n class PackageSerializer(serializers.ModelSerializer):\r\n+    services = serializers.PrimaryKeyRelatedField(queryset=Service.objects.all(), many=True)\r\n+\r\n     class Meta:\r\n\\ No newline at end of file\n-        model= Package\r\n-        fields = ['id', 'Name', 'Description', 'Price','poster']\n+        model = Package\r\n+        fields = ['id', 'Name', 'Description', 'Price', 'poster', 'services']\r\n+\r\n+class PlannerListSerializer(serializers.ModelSerializer):\r\n+    # venue = VenueSerializer()\r\n+    # service = ServiceSerializer()\r\n+    # package = PackageSerializer()\r\n+    # package = serializers.PrimaryKeyRelatedField(queryset=Package.objects.all())\r\n+    \r\n+        # Use PrimaryKeyRelatedField to accept only the ID of the related objects\r\n+    venue = serializers.PrimaryKeyRelatedField(queryset=Venue.objects.all(), required=False)\r\n+    service = serializers.PrimaryKeyRelatedField(queryset=Service.objects.all(), required=False)\r\n+    package = serializers.PrimaryKeyRelatedField(queryset=Package.objects.all(), required=False)\r\n+\r\n+\r\n+    class Meta:\r\n+        model = PlannerList \r\n+        fields = ['id', 'booked_at', 'venue', 'service', 'user', 'package','session_id']\r\n"
                }
            ],
            "date": 1731427078821,
            "name": "Commit-0",
            "content": "# serializers.py\r\nfrom rest_framework import serializers\r\nfrom .models import Venue,Service,OurWork,Package\r\n\r\nclass VenueSerializer(serializers.ModelSerializer):\r\n    class Meta:\r\n        model = Venue\r\n        fields = ['id', 'Name', 'Location', 'Capacity','No_of_Halls','Area','Parking','Booking_price','Poster']\r\n\r\nclass ServiceSerializer(serializers.ModelSerializer):\r\n    class Meta:\r\n        model = Service\r\n        fields = ['id', 'Name','Type', 'Description', 'Price','poster','keywords']\r\n        \r\n    def get_poster_url(self, obj):\r\n        request = self.context.get('request')\r\n        if obj.poster and request:\r\n            return request.build_absolute_uri(obj.poster.url)\r\n        return None\r\n    \r\nclass OurWorkSerializer(serializers.ModelSerializer):\r\n    class Meta:\r\n        model = OurWork\r\n        fields = ['id', 'Name', 'poster', 'created_at']\r\n        \r\nclass PackageSerializer(serializers.ModelSerializer):\r\n    class Meta:\r\n        model= Package\r\n        fields = ['id', 'Name', 'Description', 'Price','poster']"
        }
    ]
}